To see super pom mvn help:effective-pom 
`mvn archetype:generate` to generate a maven project folding for the given archetype for an example 
maven-archetype-quickstart, maven-archetype-webapp
`mvn dependency:copy-dependencies` - downloads all the dependencies from maven central repo and downloads to local and build target.
`mvn dependency:tree` view the dependencies and its transtive dependencies.
`mvn install -Pprod` build with profile
mvn clean verify sonar:sonar -Dsonar.login=<sonar token> generate sonar report
pluginGroup in settings.xml org.sonarsource.scanner.maven


version range execlusion and inclusion
<version>(3.8,]</version> greater than 3.8 
<version>(, 3.8]</version> less than or equal to 3.8
<version>[3.8, 4.0.1)<version> 3.8, 3.9 and 4.0.0

Syntax of plugin config

<plugin>
 <groupId>
 <artifactId>
 <version>
 <configuration>
 </configuration>
 <executions>
  <execution>
        <id></id>
  	<phase></phase>
 	<goals>
		<goal></goal>
	</goals>
  </execution>
 </executions>	
</plugin> 

some popular plugins
org.codehaus.mojo:exec-maven-plugin    		 with configuration fully qualified Application class file name.
org.apache.maven.plugins:maven-compile-plugin    with configuration <source> <target> of java version
org.jacoco:jacoco-maven-plugin: 		 two execution goals prepare-agent, and report (phase: test)
org.apache.maven.plugins:maven-surefire-plugin   to run parallel test method
 	<configuration>
            <parallel>methods</parallel>
            <threadCount>10</threadCount>
        </configuration>
org.apache.maven.plugins:maven-surefire-report-plugin to generate test report.

SkipTests
permanenet <skipTests>true</skipTest> in maven surefire plugin
-DskipTests, or -Dmaven.test.skip=true passing param to the maven build cmds

Nexus: 
Three types of repos: proxy, hosted, group (contains one or more repos)
configurations:
pom.xml => configure the nexus repo paths repositories (maven-group), distributionManagment with snapshotRepository(maven-snapshots) and repository(maven-releases) of your nexus repo path. 
settings.xml => under mirrors-> add mirror for maven-central repo with your (maven-group repo), under servers add server-> id, username and password for  maven-snapshot and mavem-release 

Plugin: 
create a project from mvn archetype:generate with the artifactId maven-archetype-plugin
Add following dependencies: org.apache.maven:maven-plugin-api, org.apache.maven.plugin-tools:maven-plugin-annotations, org.apache.maven:mave-project, and then plugin org.apache.maven.plugins:maven-plugin-plugin

@Mojo(name="", defaultPhase=compile)
create a Mojo class extending AbstractMojo

@Parameter(defaultValue="${project}", required=true, readonly=true)
MavenProject mavenProject;

//Custom property
@Parameter(property= "scope")
String scope

overrider execute method